# Gemini Code CLI Configuration for PRPROMPTS Generator
# Version: 2.2.0
# Optimized for Gemini 2.5 Pro (1M token context window)

commands:
  # PRD Creation Commands
  create-prd:
    file: "commands/create-prd.md"
    description: "[prprompts] Interactive PRD creation wizard (10 questions)"
    category: "PRD Generation"

  auto-gen-prd:
    prompt: "prompts/auto-generate-prd.md"
    description: "Auto-generate PRD from description (zero interaction)"
    category: "PRD Generation"

  prd-from-files:
    prompt: "prompts/generate-prd-from-files.md"
    description: "Generate PRD from existing markdown files (optional input)"
    category: "PRD Generation"

  # PRD Analysis
  analyze-prd:
    file: "commands/analyze-prd.md"
    description: "[prprompts] Validate and analyze PRD, show customizations"
    category: "PRD Generation"

  refine-prd:
    prompt: "prompts/refine-prd.md"
    description: "[prprompts] Interactively improve PRD quality through AI-guided refinement"
    category: "PRD Generation"

  # PRPROMPTS Generation Commands
  gen-prprompts:
    file: "commands/gen-prprompts.md"
    description: "[prprompts] Generate all 32 PRPROMPTS files from PRD"
    category: "PRPROMPTS Generation"

  gen-phase-1:
    prompt: "prompts/phase-1-core.md"
    description: "Generate Phase 1: Core Architecture (10 files)"
    category: "PRPROMPTS Generation"

  gen-phase-2:
    prompt: "prompts/phase-2-quality.md"
    description: "Generate Phase 2: Quality & Security (12 files)"
    category: "PRPROMPTS Generation"

  gen-phase-3:
    prompt: "prompts/phase-3-demo.md"
    description: "Generate Phase 3: Demo & Learning (10 files)"
    category: "PRPROMPTS Generation"

  gen-file:
    prompt: "prompts/single-file-generator.md"
    description: "Generate a single PRPROMPTS file by name"
    category: "PRPROMPTS Generation"

  # v4.0 Automation Commands (Full AI-Powered Development Pipeline)
  bootstrap-from-prprompts:
    file: "commands/bootstrap-from-prprompts.md"
    description: "üöÄ [prprompts] Complete project setup from PRPROMPTS (2 min) - Clean Architecture, security, tests"
    category: "Automation"
    badge: "NEW"

  implement-next:
    file: "commands/implement-next.md"
    description: "‚ú® [prprompts] Auto-implement next feature from IMPLEMENTATION_PLAN.md (10 min) - with tests & validation"
    category: "Automation"
    badge: "NEW"

  full-cycle:
    file: "commands/full-cycle.md"
    description: "ü§ñ [prprompts] Auto-implement 1-10 features automatically (1-2 hours) - complete automation loop"
    category: "Automation"
    badge: "NEW"

  review-and-commit:
    file: "commands/review-and-commit.md"
    description: "‚úÖ [prprompts] Validate and commit changes - PRPROMPTS compliance, security checks, tests"
    category: "Automation"
    badge: "NEW"

  qa-check:
    file: "commands/qa-check.md"
    description: "üîç [prprompts] Comprehensive compliance audit - generates QA_REPORT.md with score"
    category: "Automation"
    badge: "NEW"

# Project Settings
project:
  name: "PRPROMPTS Flutter Generator (Gemini Edition)"
  version: "4.0.0"
  description: "AI-powered Flutter development with full automation - 40-60x faster (3-5 days ‚Üí 2-3 hours)"
  ai_model: "gemini-2.5-pro"
  context_length: "1M tokens"

# Default Behaviors
defaults:
  auto_approve: false
  verbose: true
  save_context: true

# Gemini-Specific Optimizations
gemini_settings:
  # Leverage Gemini's massive 1M token context
  use_extended_context: true
  max_context_tokens: 1000000

  # Enable agent mode with ReAct loop
  enable_agent_mode: true
  use_react_loop: true

  # Gemini excels at multi-file understanding
  enable_codebase_analysis: true

  # Free tier limits (preview)
  free_tier:
    requests_per_minute: 60
    requests_per_day: 1000
    context_window: "1M tokens"

  # Agentic features
  enable_workflow_automation: true
  multi_step_planning: true
